{"/Crate/basic_usage":{"title":"Basic Usage","data":{"":"For simplicity this page will be using the FileType Yaml. All file formats have full parity so whichever you use is up to you.","constructors#Constructors":"Valid constructors are:\nnew Yaml(FILE);\nnew Yaml(NAME, PATH);\nnew Yaml(FILETYPE); // Copy-constructor\nnew Yaml(NAME, PATH, INPUTSTREAM);","creating-files#Creating Files":"// Create files by instantiating their respective class directly\nYaml yaml = new Yaml(\"filename1\", \"Path\");\nConfig config = new Config(\"filename2\", \"Path\"); //Special version of YAML\nJson json = new Json(\"filename3\", \"Path\");\nToml toml = new Toml(\"filename4\", \"Path\");\n\n// Or use the builder\nConfig configUsingBuilder = CrateBuilder\n.fromFile(FILE-HERE)\n.addInputStreamFromResource() // Optional if you want to generate a default config from file\n.setDataType()\n.setReloadSettings()\n.createConfig();","getting-values#Getting Values":"Getting values from a file is vital. Crate provides a plethora of utility methods with sane defaults to help with this.\n// Basic Getters\nObject anObject = config.get(\"Key\"); // Default: null\nString aString = config.getString(\"Key\"); // Default: \"\"\nint anInt = config.getInt(\"Key\"); // Default: 0\ndouble aDouble = config.getDouble(\"Key\"); // Default: 0.0\nfloat aFloat = config.getFloat(\"Key\"); // Default: 0.0\nlong aLong = config.getLong(\"Key\"); // Default: 0.0\nList<String> aStringList = config.getStringList(\"Key\"); // Default: ArrayList<String>()\nTimeUnit anEnum = config.getEnum(\"Key\", TimeUnit.class); //Throws an CrateValidation / IllegalStateException\n\n// Advanced Getters\nOptional<String> optionalString = config.find(\"Key\", String.class); // If a key is not present an empty optional will be returned\nString getOrDefault = config.getOrDefault(\"Key\", \"Default-Value\"); // Returns the value or Default-Value if Key does not exist\nString getOrSetDefault = config.getOrSetDefault(\"Key\", \"Default-Value\"); // Will set and return value, if key does not yet exist in file","setting-values#Setting Values":"config.set(\"Key\", \"Value\");\nconfig.setDefault(\"Key\", \"Default-Value\"); // Will only set, if key does not yet exist in file","quality-of-life#Quality of Life":"","setdefault#setDefault":"Sets the value only if the file does not contain the key.\nconfig.setDefault(\"Key\", \"Default-Value\");","getordefault#getOrDefault":"Returns the value, or default-value if file does not contain the key.\nString getOrDefault = config.getOrDefault(\"Key\", \"Default-Value\");","getorsetdefault#getOrSetDefault":"Returns the value, or default-value if file does not contain the key. Also sets the value to default if the file does not contain the key.\nString getOrSetDefault = config.getOrSetDefault(\"Key\", \"Default-Value\");","setpathprefix#setPathPrefix":"Sets a prefix for the key argument.Consider the following code:\nconfig.get(\"spawn.x\");\nconfig.get(\"spawn.y\");\nconfig.get(\"spawn.z\");\nInstead, one could do this:\nconfig.setPathPrefix(\"spawn\");\nconfig.get(\"x\");\nconfig.get(\"y\");\nconfig.get(\"z\");\nconfig.setPathPrefix(\"\"); // Set prefix to empty as to not mess with other stuff accessing","io#IO":"File file = config.getFile();\nString name = config.getName();\nconfig.clear();"}},"/Crate/file_formats":{"title":"File Formats","data":{"":"Crate provides support for three file formats: Yaml, Json and Toml. Whichever one you want to use, and when, should be based on your needs & requirements.","config#Config":"The config format in Crate is just an extension of Yaml with specific defaults.","yaml#Yaml":"Pros\nCommon for configuration\nReadability\n\nCons\nSlower than alternatives\nLess suitable for storing larger amounts of data\n\n\nWe recommend using Crate's Config format over Yaml for configuration files.","json#Json":"Pros\nCommon for configuration & storage\nIs very fast, can store larger amounts of data\n\nCons\nReadability","toml#Toml":"Pros\nCompromises between Yaml's readability & Json's performance\n\nCons\nNot as common as Yaml & Json"}},"/Crate/installation":{"title":"Installation","data":{"":"","adding-dependency#Adding Dependency":"In order to use Crate you will need to download it using a BuildTool like Maven or Gradle.","add-repository#Add Repository":"repositories {\nmaven(\"https://jitpack.io\")\n}","add-dependency#Add Dependency":"dependencies {\nimplementation(\"com.github.milkdrinkers:crate:VERSION\")\n}","shade-dependency#Shade Dependency":"plugins {\nid 'com.github.johnrengelman.shadow' version '8.1.1'\n}\n\ntasks {\nshadowJar {\nrelocate 'com.github.milkdrinkers.Crate', 'yourpackage.yourname.crate'\n}\n}","add-repository-1#Add Repository":"repositories {\nmaven { url 'https://jitpack.io' }\n}","add-dependency-1#Add Dependency":"dependencies {\nimplementation 'com.github.milkdrinkers:crate:VERSION'\n}","shade-dependency-1#Shade Dependency":"plugins {\nid(\"com.github.johnrengelman.shadow\") version \"8.1.1\"\n}\n\ntasks {\nshadowJar {\nrelocate(\"com.github.milkdrinkers.Crate\", \"yourpackage.yourname.crate\")\n}\n}","add-repository-2#Add Repository":"<repositories>\n<repository>\n<id>jitpack.io</id>\n<url>https://jitpack.io</url>\n</repository>\n</repositories>","add-dependency-2#Add Dependency":"<dependency>\n<groupId>com.github.milkdrinkers</groupId>\n<artifactId>crate</artifactId>\n<version>VERSION</version>\n</dependency>","shade-dependency-2#Shade Dependency":"<plugin>\n<groupId>org.apache.maven.plugins</groupId>\n<artifactId>maven-shade-plugin</artifactId>\n<version>3.5.0</version>\n<executions>\n<execution>\n<phase>package</phase>\n<goals>\n<goal>shade</goal>\n</goals>\n</execution>\n</executions>\n<configuration>\n<createDependencyReducedPom>false</createDependencyReducedPom>\n<relocations>\n<relocation>\n<pattern>com.github.milkdrinkers.Crate</pattern>\n<shadedPattern>yourpackage.yourname.crate</shadedPattern>\n</relocation>\n</relocations>\n</configuration>\n</plugin>","what-now#What now?":"Crate should now be available for use in your project.For further reading I strongly recommend:\nFile Formats\nBasic Usage"}},"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar."}},"/":{"title":"Introduction","data":{"":"Welcome to Nextra! This is a basic docs template. You can use it as a starting point for your own project :)","what-is-nextra#What is Nextra?":"A simple, powerful and flexible site generation framework with everything you love from Next.js.","documentation#Documentation":"The documentation is available at https://nextra.site."}}}